{"ast":null,"code":"import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let PasswordValidatorDirective = /*#__PURE__*/(() => {\n  class PasswordValidatorDirective {\n    constructor() {\n      this.validator = this.passwordValidator();\n    }\n\n    validate(control) {\n      return this.validator(control);\n    }\n\n    passwordIsValid(value) {\n      return value != '1234';\n    }\n\n    passwordValidator() {\n      return control => {\n        if (control.value != null && control.value !== '') {\n          if (this.passwordIsValid(control.value)) {\n            return null;\n          } else {\n            return {\n              passwordValidator: false\n            };\n          }\n        } else {\n          return null;\n        }\n      };\n    }\n\n  }\n\n  PasswordValidatorDirective.ɵfac = function PasswordValidatorDirective_Factory(t) {\n    return new (t || PasswordValidatorDirective)();\n  };\n\n  PasswordValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: PasswordValidatorDirective,\n    selectors: [[\"\", \"appPasswordValidator\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useClass: PasswordValidatorDirective,\n      multi: true\n    }])]\n  });\n  return PasswordValidatorDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}